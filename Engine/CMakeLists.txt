cmake_minimum_required(VERSION 3.12)

set(ENGINE_PROJECT_NAME Engine)
project(${ENGINE_PROJECT_NAME})



set(INCLUDES
        include/Engine/Window.h
		include/Engine/Shader/shaders.h
		include/Engine/Shader/ShaderProgram.h
		include/Engine/Shader/VertexBuffer.h
		include/Engine/Shader/VertexArray.h
		include/Engine/Shader/BufferLayout.h
		include/Engine/Shader/BufferElement.h
        )

set(SOURCES
        src/Engine/Window.cpp
		src/Engine/Shader/ShaderProgram.cpp
		src/Engine/Shader/VertexBuffer.cpp
		src/Engine/Shader/VertexArray.cpp
		src/Engine/Shader/BufferLayout.cpp
		src/Engine/Shader/BufferElement.cpp
		)
		
		
set(ALL_SOURCES ${INCLUDES} ${SOURCES})

add_library(${ENGINE_PROJECT_NAME} STATIC
    ${ALL_SOURCES}

)

source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${ALL_SOURCES})



add_subdirectory(../external/glfw ${CMAKE_CURRENT_BINARY_DIR}/glfw)
add_subdirectory(../external/glad ${CMAKE_CURRENT_BINARY_DIR}/glad)
add_subdirectory(../external/imgui ${CMAKE_CURRENT_BINARY_DIR}/imgui)
add_subdirectory(../external/glm ${CMAKE_CURRENT_BINARY_DIR}/glm)

target_link_libraries(${ENGINE_PROJECT_NAME} PRIVATE glfw)
target_link_libraries(${ENGINE_PROJECT_NAME} PUBLIC glad)
target_link_libraries(${ENGINE_PROJECT_NAME} PRIVATE ImGui)
target_link_libraries(${ENGINE_PROJECT_NAME} PRIVATE glm)

target_include_directories(${ENGINE_PROJECT_NAME} PUBLIC include)
target_compile_features(${ENGINE_PROJECT_NAME} PUBLIC cxx_std_17)   